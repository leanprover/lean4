x y : Nat
⊢ x + y = Nat.add y x
x y : Nat
⊢ x + y = Nat.add y x
x y : Nat
⊢ Nat.add x y = Nat.add y x
x y : Nat
⊢ f x (Nat.add x y) y = y + x
x y : Nat
| x + y
case h.h
a b : Nat
| 0 + a + b
a b : Nat
| a + b
case h.h
a b : Nat
| 0 + a + b
case h
p : Nat → Prop
h : ∀ (a : Nat), p a
x : Nat
| p (id (0 + x))
p : Nat → Prop
h : ∀ (a : Nat), p a
x : Nat
| id (0 + x)
p : Nat → Prop
h : ∀ (a : Nat), p a
x : Nat
| 0 + x
case h₁
p : Prop
x : Nat
| x = x → p
p : Prop
x : Nat
⊢ (True → p) → p
case h
x : Nat
| 0 + x
p : Prop
x : Nat
⊢ (True → p) → p
x y : Nat
f : Nat → Nat → Nat
g : Nat → Nat
h₁ : ∀ (z : Nat), f z z = z
h₂ : ∀ (x y : Nat), f (g x) (g y) = y
⊢ f (g y) (f (g x) (g (0 + x))) = x
x y : Nat
f : Nat → Nat → Nat
g : Nat → Nat
h₁ : ∀ (z : Nat), f z z = z
h₂ : ∀ (x y : Nat), f (g x) (g y) = y
⊢ f (g y) (f (g x) (g x)) = x
x y : Nat
h : y = 0
| y + x
p : Nat → Prop
x y : Nat
h1 : y = 0
h2 : p x
| y + x
j : Fin 5
p : (n : Nat) → Fin n → Prop
i : Fin 5
hp : p 5 i
hi : j = i
| j
p : {x : Nat} → Nat → Prop
x y : Nat
h1 : y = 0
h2 : p x
| y
p : {x : Nat} → Nat → Prop
x y : Nat
h1 : y = 0
h2 : p x
| y
conv1.lean:166:10-166:13: error: invalid 'lhs' conv tactic, application has only 1 (nondependent) argument(s)
conv1.lean:169:10-169:15: error: invalid 'arg' conv tactic, application has only 1 (nondependent) argument(s)
conv1.lean:172:10-172:13: error: invalid 'congr' conv tactic, application or implication expected
  p
conv1.lean:175:10-175:15: error: cannot select argument

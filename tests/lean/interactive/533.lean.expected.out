{"textDocument": {"uri": "file://533.lean"},
 "position": {"line": 2, "character": 10}}
{"items":
 [{"label": "False", "kind": 22, "detail": "Prop"},
  {"label": "Fin", "kind": 22, "detail": "Nat → Type"},
  {"label": "Float", "kind": 22, "detail": "Type"},
  {"label": "FloatArray", "kind": 22, "detail": "Type"},
  {"label": "FloatSpec", "kind": 22, "detail": "Type 1"},
  {"label": "Foo", "kind": 6, "detail": "Sort ?u"},
  {"label": "ForIn",
   "kind": 7,
   "detail":
   "(Type u₁ → Type u₂) → Type u → outParam (Type v) → Type (max (max (max u (u₁ + 1)) u₂) v)"},
  {"label": "ForIn'",
   "kind": 7,
   "detail":
   "(Type u₁ → Type u₂) →\n  (ρ : Type u) → (α : outParam (Type v)) → outParam (Membership α ρ) → Type (max (max (max u (u₁ + 1)) u₂) v)"},
  {"label": "ForInStep", "kind": 22, "detail": "Type u → Type u"},
  {"label": "ForM",
   "kind": 7,
   "detail":
   "(Type u → Type v) → Type w₁ → outParam (Type w₂) → Type (max (max (max (u + 1) v) w₁) w₂)"},
  {"label": "Function", "kind": 9, "detail": "namespace"},
  {"label": "Functor",
   "kind": 7,
   "detail": "(Type u → Type v) → Type (max (u + 1) v)"},
  {"label": "fix",
   "kind": 3,
   "detail": "[inst : Inhabited β] → ((α → β) → α → β) → α → β"},
  {"label": "fix1",
   "kind": 3,
   "detail": "[inst : Inhabited β] → ((α → β) → α → β) → α → β"},
  {"label": "fix2",
   "kind": 3,
   "detail":
   "[inst : Inhabited β] → ((α₁ → α₂ → β) → α₁ → α₂ → β) → α₁ → α₂ → β"},
  {"label": "fix3",
   "kind": 3,
   "detail":
   "[inst : Inhabited β] → ((α₁ → α₂ → α₃ → β) → α₁ → α₂ → α₃ → β) → α₁ → α₂ → α₃ → β"},
  {"label": "fix4",
   "kind": 3,
   "detail":
   "[inst : Inhabited β] → ((α₁ → α₂ → α₃ → α₄ → β) → α₁ → α₂ → α₃ → α₄ → β) → α₁ → α₂ → α₃ → α₄ → β"},
  {"label": "fix5",
   "kind": 3,
   "detail":
   "[inst : Inhabited β] → ((α₁ → α₂ → α₃ → α₄ → α₅ → β) → α₁ → α₂ → α₃ → α₄ → α₅ → β) → α₁ → α₂ → α₃ → α₄ → α₅ → β"},
  {"label": "fix6",
   "kind": 3,
   "detail":
   "[inst : Inhabited β] →\n  ((α₁ → α₂ → α₃ → α₄ → α₅ → α₆ → β) → α₁ → α₂ → α₃ → α₄ → α₅ → α₆ → β) → α₁ → α₂ → α₃ → α₄ → α₅ → α₆ → β"},
  {"label": "fixCore",
   "kind": 3,
   "detail": "(α → β) → ((α → β) → α → β) → α → β"},
  {"label": "fixCore1",
   "kind": 3,
   "detail": "(α → β) → ((α → β) → α → β) → α → β"},
  {"label": "fixCore2",
   "kind": 3,
   "detail": "(α₁ → α₂ → β) → ((α₁ → α₂ → β) → α₁ → α₂ → β) → α₁ → α₂ → β"},
  {"label": "fixCore3",
   "kind": 3,
   "detail":
   "(α₁ → α₂ → α₃ → β) → ((α₁ → α₂ → α₃ → β) → α₁ → α₂ → α₃ → β) → α₁ → α₂ → α₃ → β"},
  {"label": "fixCore4",
   "kind": 3,
   "detail":
   "(α₁ → α₂ → α₃ → α₄ → β) → ((α₁ → α₂ → α₃ → α₄ → β) → α₁ → α₂ → α₃ → α₄ → β) → α₁ → α₂ → α₃ → α₄ → β"},
  {"label": "fixCore5",
   "kind": 3,
   "detail":
   "(α₁ → α₂ → α₃ → α₄ → α₅ → β) → ((α₁ → α₂ → α₃ → α₄ → α₅ → β) → α₁ → α₂ → α₃ → α₄ → α₅ → β) → α₁ → α₂ → α₃ → α₄ → α₅ → β"},
  {"label": "fixCore6",
   "kind": 3,
   "detail":
   "(α₁ → α₂ → α₃ → α₄ → α₅ → α₆ → β) →\n  ((α₁ → α₂ → α₃ → α₄ → α₅ → α₆ → β) → α₁ → α₂ → α₃ → α₄ → α₅ → α₆ → β) → α₁ → α₂ → α₃ → α₄ → α₅ → α₆ → β"},
  {"label": "failure",
   "kind": 5,
   "detail": "[self : Alternative f] → {α : Type u} → f α"},
  {"label": "false", "kind": 4, "detail": "Bool"},
  {"label": "false_and",
   "kind": 3,
   "detail": "∀ (p : Prop), (False ∧ p) = False"},
  {"label": "false_iff", "kind": 3, "detail": "∀ (p : Prop), (False ↔ p) = ¬p"},
  {"label": "false_implies",
   "kind": 3,
   "detail": "∀ (p : Prop), (False → p) = True"},
  {"label": "false_of_ne", "kind": 3, "detail": "a ≠ a → False"},
  {"label": "false_or", "kind": 3, "detail": "∀ (p : Prop), (False ∨ p) = p"},
  {"label": "flip", "kind": 3, "detail": "(α → β → φ) → β → α → φ"},
  {"label": "floatDecLe",
   "kind": 3,
   "detail": "(a b : Float) → Decidable (a ≤ b)"},
  {"label": "floatDecLt",
   "kind": 3,
   "detail": "(a b : Float) → Decidable (a < b)"},
  {"label": "floatSpec", "kind": 21, "detail": "FloatSpec"},
  {"label": "forIn",
   "kind": 5,
   "detail":
   "[self : ForIn m ρ α] → {β : Type u₁} → [inst : Monad m] → ρ → β → (α → β → m (ForInStep β)) → m β"},
  {"label": "forIn'",
   "kind": 5,
   "detail":
   "[self : ForIn' m ρ α d] → {β : Type u₁} → [inst : Monad m] → (x : ρ) → β → ((a : α) → a ∈ x → β → m (ForInStep β)) → m β"},
  {"label": "forM",
   "kind": 5,
   "detail":
   "[self : ForM m γ α] → [inst : Monad m] → γ → (α → m PUnit) → m PUnit"},
  {"label": "forall_congr",
   "kind": 3,
   "detail": "(∀ (a : α), p a = q a) → (∀ (a : α), p a) = ∀ (a : α), q a"},
  {"label": "funext",
   "kind": 3,
   "detail": "(∀ (x : α), f₁ x = f₂ x) → f₁ = f₂"}],
 "isIncomplete": true}

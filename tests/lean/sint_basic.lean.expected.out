Int8 : Type
20
-20
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true

[result]
def myId8 (x_1 : u8) : u8 :=
  ret x_1
def myId8._boxed (x_1 : obj) : obj :=
  let x_2 : u8 := unbox x_1;
  dec x_1;
  let x_3 : u8 := myId8 x_2;
  let x_4 : obj := box x_3;
  ret x_4
Int16 : Type
20
-20
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true

[result]
def myId16 (x_1 : u16) : u16 :=
  ret x_1
def myId16._boxed (x_1 : obj) : obj :=
  let x_2 : u16 := unbox x_1;
  dec x_1;
  let x_3 : u16 := myId16 x_2;
  let x_4 : obj := box x_3;
  ret x_4
Int32 : Type
20
-20
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true

[result]
def myId32 (x_1 : u32) : u32 :=
  ret x_1
def myId32._boxed (x_1 : obj) : obj :=
  let x_2 : u32 := unbox x_1;
  dec x_1;
  let x_3 : u32 := myId32 x_2;
  let x_4 : obj := box x_3;
  ret x_4
Int64 : Type
20
-20
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true

[result]
def myId64 (x_1 : u64) : u64 :=
  ret x_1
def myId64._boxed (x_1 : obj) : obj :=
  let x_2 : u64 := unbox x_1;
  dec x_1;
  let x_3 : u64 := myId64 x_2;
  let x_4 : obj := box x_3;
  ret x_4
ISize : Type
20
-20
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true
true

[result]
def myIdSize (x_1 : usize) : usize :=
  ret x_1
def myIdSize._boxed (x_1 : obj) : obj :=
  let x_2 : usize := unbox x_1;
  dec x_1;
  let x_3 : usize := myIdSize x_2;
  let x_4 : obj := box x_3;
  ret x_4
